{"version":3,"sources":["pages/sign-in-and-sign-up/sign-in-and-sign-up.style.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["SignInAndSignUpContainer","styled","div","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUp","state","displayName","confirmPassword","alert","signUpStart","props","e","setState","this","React","Component","SignInAndSignUpPage"],"mappings":"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","file":"static/js/3.48a64d28.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 850px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n\n  @media screen and (max-width: 800px) {\n    flex-direction: column;\n    width: unset;\n    align-items: center;\n\n    > *:first-child {\n      margin-bottom: 50px;\n    }\n  }\n`;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\n\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n    <div className='group'>\n      <input className='form-input' onChange={handleChange} {...otherProps} />\n      {label ? (\n        <label\n          className={`${\n            otherProps.value.length ? 'shrink' : ''\n          } form-input-label`}\n        >\n          {label}\n        </label>\n      ) : null}\n    </div>\n);\n  \nexport default FormInput;","import React, {useState} from 'react';\nimport './sign-in.style.scss';\nimport {connect} from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'\n\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\n\nconst SignIn = ({emailSignInStart,googleSignInStart}) => {\n  const [userCredentials, setCredentials] = useState({email:'', password:''})\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     email: '',\n  //     password: ''\n  //   };\n  // }\n  const { email, password } = userCredentials;\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setCredentials({...userCredentials, [name]: value });\n  };\n\n  \n    return (\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n          <form onSubmit={ handleSubmit}> \n            <FormInput \n              name=\"email\" \n              type=\"text\" \n              value={email} \n              handleChange={handleChange}\n              label=\"Email\"\n              required\n              />\n            <FormInput \n              name=\"password\" \n              type=\"password\" \n              value={password} \n              handleChange={handleChange}    \n              label=\"Password\"\n              required\n              />\n            <div className=\"buttons\">\n                <CustomButton type=\"submit\">Sign In</CustomButton>\n                <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>Sign In with Google</CustomButton>\n            </div>                \n          </form>\n      </div>\n    );\n  }\n  \n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null,mapDispatchToProps)(SignIn);","import React from 'react';\n\nimport {connect} from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {signUpStart} from '../../redux/user/user.actions';\nimport './sign-up.style.scss';\n\nclass SignUp extends React.Component{\n    constructor(){\n        super();\n\n        this.state = {\n            displayName :'',\n            email : '',\n            password : '',\n            confirmPassword :''\n        };\n    }\n    handleSubmit = async event => {\n        event.preventDefault();\n        const {displayName, email,password,confirmPassword}= this.state;\n\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n        const {signUpStart} = this.props;\n        signUpStart({email,password,displayName});\n    }\n    handleChange = e => {\n        const {value, name} = e.target;\n        this.setState({[name]: value});\n    }\n    render() {\n        const {displayName, email,password,confirmPassword}= this.state;\n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I do not have a account</h2>\n                <span>Sign up with your email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={this.handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={this.handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={this.handleChange}\n                        label='Confirm Password'\n                        required\n                    />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart : userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null,mapDispatchToProps)(SignUp);","import React from 'react';\n\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.style';\n\nimport  SignIn from '../../components/sign-in/sign-in.component'\nimport  SignUp from '../../components/sign-up/sign-up.component'\n\n\nconst SignInAndSignUpPage = () => (\n   <SignInAndSignUpContainer>\n   <SignIn />\n   <SignUp />\n </SignInAndSignUpContainer>\n)\nexport default SignInAndSignUpPage;"],"sourceRoot":""}