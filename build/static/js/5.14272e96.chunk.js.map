{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-preview/collection-preview.style.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.component.jsx","components/collection-overview/collection-overview.component.jsx","components/collection-overview/collections-overview.container.jsx","pages/collection/collection.style.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","pages/shop/shop.component.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","mapStateToProps","createStructuredSelector","othercollectionprops","CollectionsOverviewContainer","compose","CollectionsOverview","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","ownProps","collection","collectionURLparam","params","collectionId","CollectionPage","fetchCollectionStart","useEffect","exact","component"],"mappings":"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","file":"static/js/5.14272e96.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n  );\n\nexport const selectCollection = collectionURLparam => createSelector(\n    [selectCollections],\n    collections => collections ? collections[collectionURLparam] : null\n);\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)","import React from 'react';\nimport * as spinnerStyles from '../spinner/spinner.styles';\n\nconst WithSpinner = WrappedComponent => {\n    const Spinner = ({isLoading, ...otherProps}) => {\n        return isLoading ? (\n            <spinnerStyles.SpinnerOverlay>\n                <spinnerStyles.SpinnerContainer></spinnerStyles.SpinnerContainer>\n            </spinnerStyles.SpinnerOverlay>\n        ) : <WrappedComponent {...otherProps} />\n    };\n    return Spinner;\n};\n\nexport default WithSpinner;","import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;","import React from 'react';\nimport {\n    CollectionItemContainer, \n    CollectionFooterContainer,\n    AddButton,\n    BackgroundImage,\n    NameContainer,\n    PriceContainer\n} from './collection-item.styles';\n\nimport {connect} from 'react-redux';\nimport {addItem} from '../../redux/cart/cart.actions'\n\nconst CollectionItem = ({item, addItem}) => {\n    const { name, price, imageUrl} = item;\n    return (\n        <CollectionItemContainer>\n            <BackgroundImage className='image' imageUrl={imageUrl} />\n            <CollectionFooterContainer>\n            <NameContainer>{name}</NameContainer>\n            <PriceContainer>{price}</PriceContainer>\n            </CollectionFooterContainer>\n            <AddButton onClick={() => addItem(item)} inverted>\n            Add to cart\n            </AddButton>\n        </CollectionItemContainer>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n})\n\nexport default connect(null,mapDispatchToProps)(CollectionItem);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewContainer\n} from './collection-preview.style';\nimport CollectionItem from '../collection-item/collection-item.component';\n\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\n    <CollectionPreviewContainer>\n      <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n        {title.toUpperCase()}\n      </TitleContainer>\n      <PreviewContainer>\n        {items\n          .filter((item, idx) => idx < 4)\n          .map(item => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n      </PreviewContainer>\n    </CollectionPreviewContainer>\n);\n\nexport default withRouter(CollectionPreview);","import React from 'react';\nimport './collection-overview.style.scss';\nimport CollectionPreview from '../collection-preview/collection-preview.component'\n\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from 'reselect';\nimport {selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nconst CollectionOverview = ({collections}) => (\n    <div className=\"collections-overview\">\n        {collections.map(({ id, ...othercollectionprops }) => (\n            <CollectionPreview key={id} {...othercollectionprops}/>\n        ))}  \n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionOverview);","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collection-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n","import styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;","import React from 'react';\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport {connect} from 'react-redux';\nimport {selectCollection} from '../../redux/shop/shop.selectors'\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.style';\n\nconst CollectionPage = ({ collection }) => {\n    const { title, items } = collection;\n    return (\n      <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n          {items.map(item => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n       </CollectionItemsContainer>\n    </CollectionPageContainer>\n    );\n};\n  \n  const mapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n  });\n  \n  export default connect(mapStateToProps)(CollectionPage);","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionLoaded(state)\n});\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;","import React, {useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {fetchCollectionStart} from '../../redux/shop/shop.actions';\n\nimport CollectionsOverviewContainer from '../../components/collection-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\n\n// const CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({fetchCollectionStart, match}) => {\n\n  useEffect(() => {\n    fetchCollectionStart();\n  },[fetchCollectionStart])  \n\n  return(\n    <div className='shop-page'>\n      <Route \n        exact \n        path={`${match.path}`} \n        component={CollectionsOverviewContainer} \n      />\n      <Route \n      path={`${match.path}/:collectionId`} \n      component={CollectionPageContainer} />\n    </div>\n  )\n}\n\n\n// const mapStateToProps = createStructuredSelector({\n//   isCollectionFetching : selectIsCollectionFetching,\n//   isCollectionLoaded : selectIsCollectionLoaded\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStart : () => dispatch(fetchCollectionStart())\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"],"sourceRoot":""}