{"ast":null,"code":"import { CartActionTypes } from './cart.types';\nimport { addItemToCart } from './cart.utils';\nconst INITIAL_STATE = {\n  isHidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART:\n      return { ...state,\n        isHidden: !state.isHidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id != AuthenticatorAssertionResponse.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-shopping/src/redux/cart/cart.reducer.jsx"],"names":["CartActionTypes","addItemToCart","INITIAL_STATE","isHidden","cartItems","cartReducer","state","action","type","TOGGLE_CART","ADD_ITEM","payload","REMOVE_ITEM","filter","cartItem","id","AuthenticatorAssertionResponse"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,QAAQ,EAAG,IADO;AAElBC,EAAAA,SAAS,EAAG;AAFM,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACJ,aAAP,EAAqBK,MAArB,KAAgC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,eAAe,CAACS,WAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,QAAQ,EAAG,CAACG,KAAK,CAACH;AAFf,OAAP;;AAIJ,SAAKH,eAAe,CAACU,QAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,SAAS,EAAEH,aAAa,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFrB,OAAP;;AAIJ,SAAKX,eAAe,CAACY,WAArB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACPC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeC,8BAA8B,CAACL,OAA/B,CAAuCI,EAD3D;AAFR,OAAP;;AAMJ;AACI,aAAOT,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from './cart.types';\nimport { addItemToCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n    isHidden : true,\n    cartItems : []\n}\n\nconst cartReducer = (state=INITIAL_STATE,action) => {\n    switch(action.type) {\n        case CartActionTypes.TOGGLE_CART : \n            return {\n                ...state,\n                isHidden : !state.isHidden\n            };\n        case CartActionTypes.ADD_ITEM :\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            };\n        case CartActionTypes.REMOVE_ITEM :\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(\n                    cartItem => cartItem.id != AuthenticatorAssertionResponse.payload.id\n                )\n            };\n        default :\n            return state;\n    }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}