{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './root.saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAaH,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport {persistStore} from 'redux-persist';\nimport rootReducer from './root-reducer';\n\nimport createSagaMiddleware from 'redux-saga';\n\nimport {rootSaga} from './root.saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development'){\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer,applyMiddleware(...middlewares))\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };"]},"metadata":{},"sourceType":"module"}