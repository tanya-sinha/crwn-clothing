{"ast":null,"code":"var _jsxFileName = \"/home/tanya/TS/REACT/Projects/online-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionStart } from '../../redux/shop/shop.actions';\nimport CollectionsOverviewContainer from '../../components/collection-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container'; // const CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  fetchCollectionStart,\n  match\n}) => {\n  useEffect(() => {\n    fetchCollectionStart();\n  }, [fetchCollectionStart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverviewContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n}; // const mapStateToProps = createStructuredSelector({\n//   isCollectionFetching : selectIsCollectionFetching,\n//   isCollectionLoaded : selectIsCollectionLoaded\n// })\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStart: () => dispatch(fetchCollectionStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-clothing/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","fetchCollectionStart","CollectionsOverviewContainer","CollectionPageContainer","ShopPage","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,oBAAR,QAAmC,+BAAnC;AAEA,OAAOC,4BAAP,MAAyC,qEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAGA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACH,EAAAA,oBAAD;AAAuBI,EAAAA;AAAvB,CAAD,KAAmC;AAElDP,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,oBAAoB;AACrB,GAFQ,EAEP,CAACA,oBAAD,CAFO,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAEI,KAAK,CAACC,IAAK,EAFtB;AAGE,IAAA,SAAS,EAAEJ,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,KAAD;AACA,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBADpB;AAEA,IAAA,SAAS,EAAEH,uBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAYD,CAlBD,C,CAqBA;AACA;AACA;AACA;;;AAEA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,oBAAoB,EAAG,MAAMO,QAAQ,CAACP,oBAAoB,EAArB;AADC,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAMO,kBAAN,CAAP,CAAiCH,QAAjC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {fetchCollectionStart} from '../../redux/shop/shop.actions';\n\nimport CollectionsOverviewContainer from '../../components/collection-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\n\n// const CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({fetchCollectionStart, match}) => {\n\n  useEffect(() => {\n    fetchCollectionStart();\n  },[fetchCollectionStart])  \n\n  return(\n    <div className='shop-page'>\n      <Route \n        exact \n        path={`${match.path}`} \n        component={CollectionsOverviewContainer} \n      />\n      <Route \n      path={`${match.path}/:collectionId`} \n      component={CollectionPageContainer} />\n    </div>\n  )\n}\n\n\n// const mapStateToProps = createStructuredSelector({\n//   isCollectionFetching : selectIsCollectionFetching,\n//   isCollectionLoaded : selectIsCollectionLoaded\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStart : () => dispatch(fetchCollectionStart())\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}