{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { createUserProfileDocument, auth, googleProvider } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart({\n  email,\n  password\n}) {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","createUserProfileDocument","auth","googleProvider","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,QAAuC,oBAAvC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,yBAAT,EAAmCC,IAAnC,EAAwCC,cAAxC,QAA8D,+BAA9D;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,gBAA1C;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACE,yBAAD,EAA2BM,QAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa,CAAC;AAAEO,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAAvB;AACA,UAAMG,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOF,KAAP,EAAc;AACd,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,oBAAjB,EAAuCT,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUU,kBAAV,CAA6B;AAACL,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAA7B,EAA+C;AACpD,QAAMxB,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAEC,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest,put,all,call} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';  \n\nimport { createUserProfileDocument,auth,googleProvider } from '../../firebase/firebase.utils';\nimport {signInSuccess,signInFailure} from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n      const userRef = yield call(createUserProfileDocument,userAuth);\n      const userSnapshot = yield userRef.get();\n      yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n      yield put(signInFailure(error));\n    }\n  }\n  \n  export function* signInWithGoogle() {\n    try {\n      const { user } = yield auth.signInWithPopup(googleProvider);\n      yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n      yield put(signInFailure(error));\n    }\n  }\n  \n  export function* signInWithEmail({ payload: { email, password } }) {\n    try {\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n      yield put(signInFailure(error));\n    }\n  }\n  \n  export function* onGoogleSignInStart() {\n      yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n  }\n\n  export function* onEmailSignInStart({email,password}) {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\n  export function* userSagas() {\n      yield all([call(onGoogleSignInStart)])\n  }"]},"metadata":{},"sourceType":"module"}