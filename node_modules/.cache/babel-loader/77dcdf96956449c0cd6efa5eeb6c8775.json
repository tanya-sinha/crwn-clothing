{"ast":null,"code":"var _jsxFileName = \"/home/tanya/TS/REACT/Projects/online-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionPage);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshop => {\n      const collectionMap = convertCollectionsSnapshotMap(snapshop);\n      updateCollections(collectionMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 70\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotMap","updateCollections","CollectionOverview","CollectionPage","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","isLoading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshop","collectionMap","render","match","loading","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,SAAT,EAAmBC,6BAAnB,QAAwD,+BAAxD;AAEA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACD,cAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGF,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMI,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE;AADL,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACX,MAAAA;AAAD,QAAsB,KAAKY,KAAjC;AACA,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGlB,6BAA6B,CAACiB,QAAD,CAAnD;AACAhB,MAAAA,iBAAiB,CAACiB,aAAD,CAAjB;AACD,KAHD;AAID;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACA,UAAM;AAACQ,MAAAA;AAAD,QAAY,KAAKZ,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAET,KAAK,iBAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEQ;AAA1C,SAAuDR,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAET,KAAK,iBAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEQ;AAAtC,SAAmDR,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAzBoC;;AA0BtC;;AAED,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCvB,EAAAA,iBAAiB,EAAEiB,aAAa,IAAIM,QAAQ,CAACvB,iBAAiB,CAACiB,aAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAMyB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport { firestore,convertCollectionsSnapshotMap } from '../../firebase/firebase.utils';\n\nimport {updateCollections} from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionPage);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    isLoading: true\n  }\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const {updateCollections} = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshop => {\n      const collectionMap = convertCollectionsSnapshotMap(snapshop);\n      updateCollections(collectionMap);\n    })\n  }\n\n  render(){\n    const {match} = this.props;\n    const {loading} = this.state;\n    return(\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={props => <CollectionOverviewWithSpinner isLoading={loading} {...props}/>} />\n        <Route path={`${match.path}/:collectionId`} render={props => <CollectionPageWithSpinner isLoading={loading} {...props}/>} />\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n})\n\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}