{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapshotMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshop = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotMap, collectionMap);\n  } catch (error) {}\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionsAsync","collectionRef","collection","snapshop","get","collectionMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAmBC,6BAAnB,QAAwD,+BAAxD;AACA,SAAQC,sBAAR,EAA+BC,sBAA/B,QAA4D,gBAA5D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAI;AACJ,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMZ,IAAI,CAACI,6BAAD,EAAgCQ,aAAhC,CAAhC;AACC,GAJD,CAIC,OAAOC,KAAP,EAAc,CAEd;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMf,SAAS,CAACG,eAAe,CAACa,uBAAjB,EAAyCR,qBAAzC,CAAf;AACH","sourcesContent":["import {takeEvery, call,put} from 'redux-saga/effects';\nimport {ShopActionTypes} from './shop.types';\nimport { firestore,convertCollectionsSnapshotMap } from '../../firebase/firebase.utils';\nimport {fetchCollectionSuccess,fetchCollectionFailure} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n    try {\n    const collectionRef = firestore.collection('collections');\n    const snapshop = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapshotMap, collectionMap);\n    }catch (error) {\n\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync)\n}"]},"metadata":{},"sourceType":"module"}