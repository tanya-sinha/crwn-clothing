{"ast":null,"code":"import{ShopActionTypes}from'./shop.types';import{firestore,convertCollectionsSnapshotMap}from'../../firebase/firebase.utils';export var fetchCollectionStart=function fetchCollectionStart(collectionMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionSuccess=function fetchCollectionSuccess(collectionMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionMap};};export var fetchCollectionFailure=function fetchCollectionFailure(errorMessage){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};export var fetchCollectionStartAsync=function fetchCollectionStartAsync(){return function(dispatch){var collectionRef=firestore.collection('collections');dispatch(fetchCollectionStart());collectionRef.get().then(function(snapshop){var collectionMap=convertCollectionsSnapshotMap(snapshop);dispatch(fetchCollectionSuccess(collectionMap));}).catch(function(error){return dispatch(fetchCollectionFailure(error));});};};","map":{"version":3,"sources":["/home/tanya/TS/REACT/Projects/online-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotMap","fetchCollectionStart","collectionMap","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshop","catch","error"],"mappings":"AAAA,OAASA,eAAT,KAAgC,cAAhC,CACA,OAASC,SAAT,CAAmBC,6BAAnB,KAAwD,+BAAxD,CAEA,MAAO,IAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,aAAD,QAAoB,CACpDC,IAAI,CAAEL,eAAe,CAACM,uBAD8B,CAApB,EAA7B,CAIP,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACH,aAAD,QAAoB,CACtDC,IAAI,CAAEL,eAAe,CAACQ,yBADgC,CAEtDC,OAAO,CAACL,aAF8C,CAApB,EAA/B,CAKP,MAAO,IAAMM,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,YAAY,QAAK,CACnDN,IAAI,CAAEL,eAAe,CAACY,yBAD6B,CAEnDH,OAAO,CAACE,YAF2C,CAAL,EAA3C,CAKP,MAAO,IAAME,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,EAAM,CAC3C,MAAO,UAAAC,QAAQ,CAAI,CACf,GAAMC,CAAAA,aAAa,CAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,oBAAoB,EAArB,CAAR,CAEAY,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,SAAAC,QAAQ,CAAI,CACjC,GAAMf,CAAAA,aAAa,CAAGF,6BAA6B,CAACiB,QAAD,CAAnD,CACAL,QAAQ,CAACP,sBAAsB,CAACH,aAAD,CAAvB,CAAR,CACD,CAHH,EAGKgB,KAHL,CAGW,SAAAC,KAAK,QAAIP,CAAAA,QAAQ,CAACJ,sBAAsB,CAACW,KAAD,CAAvB,CAAZ,EAHhB,EAIH,CARD,CASH,CAVM","sourcesContent":["import { ShopActionTypes } from './shop.types';\nimport { firestore,convertCollectionsSnapshotMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionStart = (collectionMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionSuccess = (collectionMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload:collectionMap\n});\n\nexport const fetchCollectionFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload:errorMessage\n});\n\nexport const fetchCollectionStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionStart());\n\n        collectionRef.get().then(snapshop => {\n            const collectionMap = convertCollectionsSnapshotMap(snapshop);\n            dispatch(fetchCollectionSuccess(collectionMap));\n          }).catch(error => dispatch(fetchCollectionFailure(error)))\n    }\n}"]},"metadata":{},"sourceType":"module"}